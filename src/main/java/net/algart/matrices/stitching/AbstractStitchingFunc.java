/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2007-2019 Daniel Alievsky, AlgART Laboratory (http://algart.net)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package net.algart.matrices.stitching;

public abstract class AbstractStitchingFunc implements StitchingFunc {

    public abstract double get(double[] coordinates, double[] values);

    public double get(double[] coordinates,
        double v0)
    {
        return get(coordinates, new double[] {v0});
    }

    public double get(double[] coordinates,
        double v0, double v1)
    {
        return get(coordinates, new double[] {v0, v1});
    }

    public double get(double[] coordinates,
        double v0, double v1, double v2)
    {
        return get(coordinates, new double[] {v0, v1, v2});
    }

    public double get(double[] coordinates,
        double v0, double v1, double v2, double v3)
    {
        return get(coordinates, new double[] {v0, v1, v2, v3});
    }

    public double get(double[] coordinates,
        double v0, double v1, double v2, double v3, double v4)
    {
        return get(coordinates, new double[] {v0, v1, v2, v3, v4});
    }

    public double get(double[] coordinates,
        double v0, double v1, double v2, double v3, double v4, double v5)
    {
        return get(coordinates, new double[] {v0, v1, v2, v3, v4, v5});
    }

    public double get(double[] coordinates,
        double v0, double v1, double v2, double v3, double v4, double v5, double v6)
    {
        return get(coordinates, new double[] {v0, v1, v2, v3, v4, v5, v6});
    }

    public double get(double[] coordinates,
        double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7)
    {
        return get(coordinates, new double[] {v0, v1, v2, v3, v4, v5, v6, v7});
    }


    /*Repeat() ( double)\s*\[\]\s+values ==>
               $1 v0,,$1 v0,$1 v1,,$1 v0,$1 v1,$1 v2,,$1 v0,$1 v1,$1 v2,$1 v3,,$1 v0,$1 v1,$1 v2,$1 v3,$1 v4,,
               $1 v0,$1 v1,$1 v2,$1 v3,$1 v4,$1 v5,,$1 v0,$1 v1,$1 v2,$1 v3,$1 v4,$1 v5,$1 v6,,
               $1 v0,$1 v1,$1 v2,$1 v3,$1 v4,$1 v5,$1 v6,$1 v7;;
               values(?=\);) ==> v0,,
                                 v0, v1,,
                                 v0, v1, v2,,
                                 v0, v1, v2, v3,,
                                 v0, v1, v2, v3, v4,,
                                 v0, v1, v2, v3, v4, v5,,
                                 v0, v1, v2, v3, v4, v5, v6,,
                                 v0, v1, v2, v3, v4, v5, v6, v7
    */
    public double get1D(double x0,
        double[] values)
    {
        return get(new double[] {x0}, values);
    }

    public double get2D(double x0, double x1,
        double[] values)
    {
        return get(new double[] {x0, x1}, values);
    }

    public double get3D(double x0, double x1, double x2,
        double[] values)
    {
        return get(new double[] {x0, x1, x2}, values);
    }
    /*Repeat.AutoGeneratedStart !! Auto-generated: NOT EDIT !! */
    public double get1D(double x0,
        double v0)
    {
        return get(new double[] {x0}, v0);
    }

    public double get2D(double x0, double x1,
        double v0)
    {
        return get(new double[] {x0, x1}, v0);
    }

    public double get3D(double x0, double x1, double x2,
        double v0)
    {
        return get(new double[] {x0, x1, x2}, v0);
    }

    public double get1D(double x0,
        double v0, double v1)
    {
        return get(new double[] {x0}, v0, v1);
    }

    public double get2D(double x0, double x1,
        double v0, double v1)
    {
        return get(new double[] {x0, x1}, v0, v1);
    }

    public double get3D(double x0, double x1, double x2,
        double v0, double v1)
    {
        return get(new double[] {x0, x1, x2}, v0, v1);
    }

    public double get1D(double x0,
        double v0, double v1, double v2)
    {
        return get(new double[] {x0}, v0, v1, v2);
    }

    public double get2D(double x0, double x1,
        double v0, double v1, double v2)
    {
        return get(new double[] {x0, x1}, v0, v1, v2);
    }

    public double get3D(double x0, double x1, double x2,
        double v0, double v1, double v2)
    {
        return get(new double[] {x0, x1, x2}, v0, v1, v2);
    }

    public double get1D(double x0,
        double v0, double v1, double v2, double v3)
    {
        return get(new double[] {x0}, v0, v1, v2, v3);
    }

    public double get2D(double x0, double x1,
        double v0, double v1, double v2, double v3)
    {
        return get(new double[] {x0, x1}, v0, v1, v2, v3);
    }

    public double get3D(double x0, double x1, double x2,
        double v0, double v1, double v2, double v3)
    {
        return get(new double[] {x0, x1, x2}, v0, v1, v2, v3);
    }

    public double get1D(double x0,
        double v0, double v1, double v2, double v3, double v4)
    {
        return get(new double[] {x0}, v0, v1, v2, v3, v4);
    }

    public double get2D(double x0, double x1,
        double v0, double v1, double v2, double v3, double v4)
    {
        return get(new double[] {x0, x1}, v0, v1, v2, v3, v4);
    }

    public double get3D(double x0, double x1, double x2,
        double v0, double v1, double v2, double v3, double v4)
    {
        return get(new double[] {x0, x1, x2}, v0, v1, v2, v3, v4);
    }

    public double get1D(double x0,
        double v0, double v1, double v2, double v3, double v4, double v5)
    {
        return get(new double[] {x0}, v0, v1, v2, v3, v4, v5);
    }

    public double get2D(double x0, double x1,
        double v0, double v1, double v2, double v3, double v4, double v5)
    {
        return get(new double[] {x0, x1}, v0, v1, v2, v3, v4, v5);
    }

    public double get3D(double x0, double x1, double x2,
        double v0, double v1, double v2, double v3, double v4, double v5)
    {
        return get(new double[] {x0, x1, x2}, v0, v1, v2, v3, v4, v5);
    }

    public double get1D(double x0,
        double v0, double v1, double v2, double v3, double v4, double v5, double v6)
    {
        return get(new double[] {x0}, v0, v1, v2, v3, v4, v5, v6);
    }

    public double get2D(double x0, double x1,
        double v0, double v1, double v2, double v3, double v4, double v5, double v6)
    {
        return get(new double[] {x0, x1}, v0, v1, v2, v3, v4, v5, v6);
    }

    public double get3D(double x0, double x1, double x2,
        double v0, double v1, double v2, double v3, double v4, double v5, double v6)
    {
        return get(new double[] {x0, x1, x2}, v0, v1, v2, v3, v4, v5, v6);
    }

    public double get1D(double x0,
        double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7)
    {
        return get(new double[] {x0}, v0, v1, v2, v3, v4, v5, v6, v7);
    }

    public double get2D(double x0, double x1,
        double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7)
    {
        return get(new double[] {x0, x1}, v0, v1, v2, v3, v4, v5, v6, v7);
    }

    public double get3D(double x0, double x1, double x2,
        double v0, double v1, double v2, double v3, double v4, double v5, double v6, double v7)
    {
        return get(new double[] {x0, x1, x2}, v0, v1, v2, v3, v4, v5, v6, v7);
    }
    /*Repeat.AutoGeneratedEnd*/
}
