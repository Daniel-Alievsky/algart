package net.algart.arrays;

/**
 * <p>Service interface for {@link ArraysSubMatrixImpl} class.</p>
 *
 * <p>AlgART Laboratory 2007-2013</p>
 *
 * @author Daniel Alievsky
 * @version 1.2
 * @since JDK 1.5
 */
interface ArraysSubMatrixIndexer {
    public boolean bitsBlocksImplemented();

    public boolean indexOfImplemented();

    public long translate(long index);

    public void getData(long arrayPos, Object destArray, int destArrayOffset, int count);

    public void setData(long arrayPos, Object srcArray, int srcArrayOffset, int count);

    public void getBits(long arrayPos, long[] destArray, long destArrayOffset, long count);

    public void setBits(long arrayPos, long[] srcArray, long srcArrayOffset, long count);

    //[[Repeat() Bit ==> Char,,Byte,,Short,,Int,,Long,,Float,,Double,,Object;;
    //           boolean(?=\s+value) ==> char,,byte,,short,,int,,long,,float,,double,,Object]]
    public long indexOfBit(long lowIndex, long highIndex, boolean value);

    public long lastIndexOfBit(long lowIndex, long highIndex, boolean value);

    public void fillBits(long position, long count, boolean value);

    //[[Repeat.AutoGeneratedStart !! Auto-generated: NOT EDIT !! ]]
    public long indexOfChar(long lowIndex, long highIndex, char value);

    public long lastIndexOfChar(long lowIndex, long highIndex, char value);

    public void fillChars(long position, long count, char value);

    public long indexOfByte(long lowIndex, long highIndex, byte value);

    public long lastIndexOfByte(long lowIndex, long highIndex, byte value);

    public void fillBytes(long position, long count, byte value);

    public long indexOfShort(long lowIndex, long highIndex, short value);

    public long lastIndexOfShort(long lowIndex, long highIndex, short value);

    public void fillShorts(long position, long count, short value);

    public long indexOfInt(long lowIndex, long highIndex, int value);

    public long lastIndexOfInt(long lowIndex, long highIndex, int value);

    public void fillInts(long position, long count, int value);

    public long indexOfLong(long lowIndex, long highIndex, long value);

    public long lastIndexOfLong(long lowIndex, long highIndex, long value);

    public void fillLongs(long position, long count, long value);

    public long indexOfFloat(long lowIndex, long highIndex, float value);

    public long lastIndexOfFloat(long lowIndex, long highIndex, float value);

    public void fillFloats(long position, long count, float value);

    public long indexOfDouble(long lowIndex, long highIndex, double value);

    public long lastIndexOfDouble(long lowIndex, long highIndex, double value);

    public void fillDoubles(long position, long count, double value);

    public long indexOfObject(long lowIndex, long highIndex, Object value);

    public long lastIndexOfObject(long lowIndex, long highIndex, Object value);

    public void fillObjects(long position, long count, Object value);

    //[[Repeat.AutoGeneratedEnd]]
}
